@using Blazored.LocalStorage
@using Fora.Shared
@inject IInterestManager _interestManager
@inject NavigationManager _navigationManager
@inject ILocalStorageService _localStorage;

<PageTitle>Intrests</PageTitle>

@page "/intrests"




<div class="row">

    <div class="col-6">
        <h3>All Intrests</h3>
@foreach(var interests in allInterests)
{
    <div class="card" style="width: 18rem;">
  <div class="card-body">
    <h5 class="card-title">@interests.Name</h5>
    <a @onclick="ToThreads" class="btn btn-primary">Threads</a>
  </div>
</div>
}
    </div>

    <div class="col-6">
        <h3> Favorite Interests</h3>
@foreach( var interests in userInterests)
{   
    <div class="card" style="width: 18rem;">
  <div class="card-body">
    <h5 class="card-title">@interests.Name</h5>
    <a @onclick="ToThreads" class="btn btn-success">Threads</a>
  </div>
</div>
}
    </div>

</div>







@code {
    private List<InterestModel> allInterests = new();
    private List<InterestModel> userInterests = new();
    private string? token;

    protected override async Task OnInitializedAsync()
    {
        token = await _localStorage.GetItemAsStringAsync("token");

        var interests = await _interestManager.GetInterests();      
        if(interests != null)
        {
            allInterests = interests;
        }

        var uInterests = await _interestManager.GetUserInterests(token);
        if(uInterests != null)
        {
            userInterests = uInterests;
        }
    }

    private async Task ToThreads()
    {
        _navigationManager.NavigateTo("threads");
    }
   
}
