@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Identity;
@using System.ComponentModel.DataAnnotations
@using Fora.Client.Services
@using Fora.Shared
@inject NavigationManager NavigationManager;
@inject IUserManager UserManager
@inject ILocalStorageService LocalStorage
@page "/login"

<PageTitle>LoginPage</PageTitle>

<style>
body {
  background-image: url('https://static0.srcdn.com/wordpress/wp-content/uploads/2022/02/Elden-Ring-Berserk-Easter-Egg-Guts-Greatsword.jpg');
}
</style>

<h3>Login</h3>

<EditForm Model="@User" OnValidSubmit="LogInUser">
    <DataAnnotationsValidator/>
    <InputText @bind-Value="@User.Username" type="text" placeholder="Username"></InputText>
    <InputText @bind-Value="@User.Password" type="password" placeholder="Password"></InputText>
    <button type="submit">Log In</button>
    <h4 class="text-danger"> @Message</h4>
</EditForm>



@code {
    public UserDto User { get; set; } = new();
    public string Message { get; set; } = string.Empty;

    private async Task LogInUser()
    {
        Console.WriteLine("click");
        var token = await UserManager.LogInUser(User);

        if(token == "Could not login")
        {
            Message = "Could not login";
            StateHasChanged();
            await Task.Delay(3000);
            NavigationManager.NavigateTo("registeruser");
        }
        else
        {
            await LocalStorage.SetItemAsStringAsync("token", token);           
            var tokenFromLocalStorage = await LocalStorage.GetItemAsStringAsync("token");  
            NavigationManager.NavigateTo("UserSettings", true);
        }          
    }
}
