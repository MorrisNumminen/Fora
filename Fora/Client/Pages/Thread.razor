@using Fora.Shared
@using Blazored.LocalStorage;
@inject IThreadManager ThreadManager;
@inject ILocalStorageService LocalStorage;
@page "/thread"

<PageTitle>Thread Name goes here</PageTitle>
<style>
body {
  background-image: url('https://static0.srcdn.com/wordpress/wp-content/uploads/2022/02/Elden-Ring-Berserk-Easter-Egg-Guts-Greatsword.jpg');
}
</style>


<h3>Thread</h3>

@foreach( var msg in Messages)
{
    @msg;
    <br/>
}

<div>
<EditForm Model="@NewMessage" OnSubmit="CreateMessage">
    <InputTextArea @bind-Value="NewMessage.Message" type="textarea" placeholder="Enter message:"></InputTextArea>
    <button type="submit">Post Message</button>
</EditForm>
</div>


@code {
    public ThreadModel CurrentThread = new();

    public MessageModel NewMessage { get; set; } = new();

    public List<MessageModel> Messages { get; set; } = new();


    string tokenFromLocalStorage = "Före token";


    protected override async Task OnInitializedAsync()
    {
        Messages = await ThreadManager.GetThreadMessages();
    }


    public async Task CreateMessage()
    {
        // Get token
        tokenFromLocalStorage = await LocalStorage.GetItemAsStringAsync("token");

        // Skickar token tillsammans med Message objekt
        await ThreadManager.CreateNewMessage(NewMessage, tokenFromLocalStorage);

        StateHasChanged();

    }

}
