@using Fora.Shared
@using Blazored.LocalStorage;
@inject IThreadManager ThreadManager;
@inject IUserManager UserManager;
@inject ILocalStorageService LocalStorage;
@page "/thread/{ThreadId:int}"


<PageTitle>Thread Name goes here</PageTitle>
<style>
body {
  background-image: url('https://static0.srcdn.com/wordpress/wp-content/uploads/2022/02/Elden-Ring-Berserk-Easter-Egg-Guts-Greatsword.jpg');
}
</style>


<h3>@CurrentThread.Name</h3>

@foreach( var MessageObj in Messages)
{

    <div class="card">
        <img src="https://www.business2community.com/wp-content/uploads/2017/08/blank-profile-picture-973460_640.png" alt="Avatar" style="width:5%">
        <h4><b>@MessageObj.User.Username</b></h4>
        <div class="container">
            <p>@MessageObj.Message</p>
        </div>
        @*<button @onclick="DeleteMessage"></button> Skicka med ID till metod för meddelande som skall raderas*@
    </div>

    <br/>
}

<div>
<EditForm Model="@NewMessage" OnSubmit="CreateMessage">
    <InputTextArea @bind-Value="NewMessage.Message" type="textarea" placeholder="Enter message:"></InputTextArea>
    <button type="submit">Post Message</button>
</EditForm>
</div>


@code {

    [Parameter]
    public int ThreadId { get; set; }

    public UserModel CurrentUser { get; set; }

    public ThreadModel CurrentThread = new();

    public MessageModel NewMessage { get; set; } = new();

    //public MsgDto NewMessage { get; set; } = new();

    public List<MessageModel> Messages = new();



    string tokenFromLocalStorage = "Före token";


    protected override async Task OnInitializedAsync()
    {

        Console.WriteLine(ThreadId);

        Messages = await ThreadManager.GetThreadMessages(ThreadId);

    }


    public async Task CreateMessage()
    {
        // Get token
        tokenFromLocalStorage = await LocalStorage.GetItemAsStringAsync("token");

        // Skickar token tillsammans med Message objekt
        Console.WriteLine("CreateMessage() Körs");
        NewMessage.ThreadId = ThreadId;
        await ThreadManager.CreateNewMessage(NewMessage, tokenFromLocalStorage);


        //StateHasChanged();

    }

    public async Task DeleteMessage(int id)
    {
        Console.WriteLine("Del 1");
        tokenFromLocalStorage = await LocalStorage.GetItemAsStringAsync("token");


        
    }

}
